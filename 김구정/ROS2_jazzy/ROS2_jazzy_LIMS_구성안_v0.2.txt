# ROS2 jazzy LIMS 구성안

# 수정이력
    1. 2024-07-28, v0.1, 김구정, 최초작성
    2. 2024-07-28, v0.2, 김구정, 노드 구성 수정
    3. 2024-08-01, v0.3, 김구정, 컴포넌트/tf2 등 관련 내용 수정/보완

# 설명 
    1. 2024-07-28, v0.1, 현재 '안 #1' 은 불완전 하다.

    
# v0.3


[목차]
1. 공통 형식
2. 기본 노드를 이용한 구성안 #1
3. LIMS_interface 구성 안



1. 공통 형식 
    1> 패키지 기본
        - 파라미터
        - 로깅 로그
        - launch script : 여러노드를 동시에 실행시키는 script( python / yaml )

    2> LIMS_interface 
        - LIMS_interface 도 상속( 확장 ?? ) 이 가능하다.
        - msg 구성
        - srv 구성
        - action 구성

    3> LIMS_interface 를 이용한 기본 노드 src module 
        - 파라미터 로 LIMS_interface 를 선택 실행 

    4> 컴포넌트 : 여러노드를 하나의 프로세스로 실행 
        - 묶으려는 노드를 컴포넌트ㅀ 구성 : 소스가 아니라 명령

    5> tf2(transfor2) : *주의* 정확하 용도가 아직 명확하지 않음. 김구정
        - tf2 를 활용한 db 트랙킹/로깅 

    6> json 타입 msg 
        - ROS2 에서 추천하지 않는다. *주의* 구글링 결과이나 개인적인 의견도 동일
        - msg2json 함수를 제작하여, dbms 에 json 으로 로깅하는 것은 문제없다.
        - 메시지는 json 으로 설계해도
            -> ROS2 개발시에는 ROS2 포맷으로 변환한다. *주의* 변환이 쉬울 것으로 예상된다.



2. 기본 노드를 이용한 구성안 #1
    1> PC node (토픽 | 액션)
        - 이더넷통신(소켓 ??) function
        - PC Ctl 토픽 구독자
        
    2> PLC node (토픽 | 액션) : PLC 갯수만큼 있어야 한다.
        - PLC 통신(Wine ??) function
        - PLC Ctl 토픽 구독자 

    3> Validation node (서비스)
        - Valid 서버스 서버  

    4> Alarm node (서비스)
        - Alarm 서비스 서버 
        => 추가 설명 
            .1> *주의* 실제 모든 노드를 
                cancel 혹은 stop 시킬 수 있을지는 의문이다. 김구정

    5> Dispatcher Logic node (액션)
        - Dispatcher Logic functon 
        - Valid 서버스 클라이언트 
        - Alarm 서비스 클라이언트 
        - tf2 ( Dispatcher -> DB ) 브로드캐스터

    6> 분석기 node (액션)
        - PC Ctl 토픽 게시자
        - 분석기 액션 서버 
        - Dispatcher 액션 클라이언트

    7> 폐기_모사 node (액션)
        - PLC Ctl 토픽 게시자
        - 페기_모사 액션 서버 
        - Dispatcher 액션 클라이언트

    8> 반출입기 node (액션)
        - PLC Ctl 토픽 게시자
        - 반출입기 액션 서버 
        - Dispatcher 액션 클라이언트

    9> Stocker node 
        - PLC Ctl 토픽 게시자
        - Stocker 액션 서버 
        - Dispatcher 액션 클라이언트

    11> Mir Ctl node  
        - Mir 통신 ?? function 
        - Mir Ctl 액션 서버 
        - Dispatcher 액션 클라이언트

    12> AIMS node (액션)
        - SECS/GEM function 
        - AIMS 액션 서버
        - Dispatcher 액션 클라이언트

    12> LIMS_Ctl : 하나의 노드가 될 수 있다.        
        - 분석기 액션 클라이언트 
        - 페기_모사 액션 클라이언트 
        - 반출입기 액션 클라이언트 
        - Stocker 액션 클라이언트 
        - Mir Ctl 액션 클라이언트 
        - AIMS 액션 클라이언트 
        
    13> DB node (토픽)
        - tf2 ( Dispatcher -> DB ) 리스너
        - dbms function 



3. LIMS_interface 구성 안
    0> 공통 : ROS2 는 기본적으로 하나의 토픽/서비스/액션 에 하나의 msg 이다.
    
    1> PC node : 노드에서 처리할 메시지를 하나의 공통으로 묶어서 만든다.
        - 실제로 구변 부분이 많을 것으로 예상
    
    2> PLC node : 각각 PLC 인터페이스당 하나의 노드가 필요.
        - msg 는 하나로 통일 구성.
        - 실제로 구변 부분이 많을 것으로 예상
    
    3> Mir ctl node : msg 는 하나로 통일 구성.
        - 실제로 구변 부분이 많을 것으로 예상
    
    4> 디스패처 이하 그룹들
        - msg 당 노드를 구성하는 안 #1
            -> 스터디 초반엔 이렇게 생가했다.
        - 같은 부류의 msg 의 토픽/액션 을 하나의 노드로 구성하는 안 #2
            -> 이 방법도 가능할 것으로 예상.
    
    5> AIMS node
        - SECS/GEM 기능의 구현이 주이지 msg 처리가 주가 아니다.
    
    6> tf2(transform2) : 메시지 전환
        - msg tracking 용으로 많이 쓰인다.
        - dbms 용으로 적합할 듯 하다.
